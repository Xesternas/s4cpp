 #include <iostream>
#include "omp.h"
using namespace std;

double f(double x) {
    return 1 / (1 + x * x);
}

int main() {
    double long n;
    double a = 0, b = 1;
    cin >> n;
    double sum = 0;

#pragma omp parallel num_threads(10) for reduction(+:sum)
    {
        for (int i = 0; i < n; i++) {
            double x = a + (b - a) * ((2 * i - 1) / (2 * n));
            sum += f(x);
        }
    }
    double pi = 4 * (1 / n) * sum;
    cout << "Pi: " << pi << endl;

    return 0;
}